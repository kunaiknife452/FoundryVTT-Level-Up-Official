export * from "./documents/_types.d.mts";
export type DocumentConstructionContext = {
  /**
   * The parent Document of this one, if this one is embedded
   */
  parent?: Document | null;
  /**
   * The compendium collection ID which contains this Document, if any
   */
  pack?: string | null;
  /**
   * Whether to validate initial data strictly?
   */
  strict?: boolean;
};
/**
 * Make all properties in T recursively readonly.
 */
export type DeepReadonly<T> = { readonly [P in keyof { [K in keyof T]: T[K] extends string | number | bigint | boolean | symbol | Function ? T[K] : T[K] extends (infer V)[] ? readonly Readonly<{ [K_2 in keyof V]: V[K_2] extends string | number | bigint | boolean | symbol | Function ? V[K_2] : V[K_2] extends (infer V)[] ? readonly Readonly<any>[] : V[K_2] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<{ [K_3 in keyof K_1]: K_1[K_3] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3] : K_1[K_3] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3] extends infer T_14 ? { [K_19 in keyof T_14]: K_1[K_3][K_19] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19] : K_1[K_3][K_19] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3][K_19] extends infer T_15 ? { [K_20 in keyof T_15]: K_1[K_3][K_19][K_20] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19][K_20] : K_1[K_3][K_19][K_20] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19][K_20] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19][K_20] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3][K_19][K_20] extends infer T_16 ? { [K_21 in keyof T_16]: K_1[K_3][K_19][K_20][K_21] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19][K_20][K_21] : K_1[K_3][K_19][K_20][K_21] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19][K_20][K_21] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19][K_20][K_21] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3][K_19][K_20][K_21] extends infer T_17 ? { [K_22 in keyof T_17]: K_1[K_3][K_19][K_20][K_21][K_22] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19][K_20][K_21][K_22] : K_1[K_3][K_19][K_20][K_21][K_22] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19][K_20][K_21][K_22] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19][K_20][K_21][K_22] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3][K_19][K_20][K_21][K_22] extends infer T_18 ? { [K_23 in keyof T_18]: K_1[K_3][K_19][K_20][K_21][K_22][K_23] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19][K_20][K_21][K_22][K_23] : K_1[K_3][K_19][K_20][K_21][K_22][K_23] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19][K_20][K_21][K_22][K_23] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19][K_20][K_21][K_22][K_23] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3][K_19][K_20][K_21][K_22][K_23] extends infer T_19 ? { [K_24 in keyof T_19]: K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24] : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24] extends infer T_20 ? { [K_25 in keyof T_20]: K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25] : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25] extends infer T_21 ? { [K_26 in keyof T_21]: K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25][K_26] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25][K_26] : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25][K_26] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25][K_26] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25][K_26] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : V[K_2] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V[K_2] extends infer T_22 ? { [K_27 in keyof T_22]: V[K_2][K_27] extends string | number | bigint | boolean | symbol | Function ? V[K_2][K_27] : V[K_2][K_27] extends (infer V)[] ? readonly Readonly<any>[] : V[K_2][K_27] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<{ [K_3 in keyof K_1]: K_1[K_3] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3] : K_1[K_3] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3] extends infer T_14 ? { [K_19 in keyof T_14]: K_1[K_3][K_19] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19] : K_1[K_3][K_19] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3][K_19] extends infer T_15 ? { [K_20 in keyof T_15]: K_1[K_3][K_19][K_20] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19][K_20] : K_1[K_3][K_19][K_20] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19][K_20] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19][K_20] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3][K_19][K_20] extends infer T_16 ? { [K_21 in keyof T_16]: K_1[K_3][K_19][K_20][K_21] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19][K_20][K_21] : K_1[K_3][K_19][K_20][K_21] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19][K_20][K_21] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19][K_20][K_21] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3][K_19][K_20][K_21] extends infer T_17 ? { [K_22 in keyof T_17]: K_1[K_3][K_19][K_20][K_21][K_22] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19][K_20][K_21][K_22] : K_1[K_3][K_19][K_20][K_21][K_22] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19][K_20][K_21][K_22] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19][K_20][K_21][K_22] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3][K_19][K_20][K_21][K_22] extends infer T_18 ? { [K_23 in keyof T_18]: K_1[K_3][K_19][K_20][K_21][K_22][K_23] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19][K_20][K_21][K_22][K_23] : K_1[K_3][K_19][K_20][K_21][K_22][K_23] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19][K_20][K_21][K_22][K_23] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19][K_20][K_21][K_22][K_23] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3][K_19][K_20][K_21][K_22][K_23] extends infer T_19 ? { [K_24 in keyof T_19]: K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24] : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24] extends infer T_20 ? { [K_25 in keyof T_20]: K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25] : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25] extends infer T_21 ? { [K_26 in keyof T_21]: K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25][K_26] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25][K_26] : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25][K_26] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25][K_26] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25][K_26] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : V[K_2][K_27] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V[K_2][K_27] extends infer T_23 ? { [K_28 in keyof T_23]: V[K_2][K_27][K_28] extends string | number | bigint | boolean | symbol | Function ? V[K_2][K_27][K_28] : V[K_2][K_27][K_28] extends (infer V)[] ? readonly Readonly<any>[] : V[K_2][K_27][K_28] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<{ [K_3 in keyof K_1]: K_1[K_3] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3] : K_1[K_3] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3] extends infer T_14 ? { [K_19 in keyof T_14]: K_1[K_3][K_19] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19] : K_1[K_3][K_19] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3][K_19] extends infer T_15 ? { [K_20 in keyof T_15]: K_1[K_3][K_19][K_20] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19][K_20] : K_1[K_3][K_19][K_20] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19][K_20] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19][K_20] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3][K_19][K_20] extends infer T_16 ? { [K_21 in keyof T_16]: K_1[K_3][K_19][K_20][K_21] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19][K_20][K_21] : K_1[K_3][K_19][K_20][K_21] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19][K_20][K_21] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19][K_20][K_21] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3][K_19][K_20][K_21] extends infer T_17 ? { [K_22 in keyof T_17]: K_1[K_3][K_19][K_20][K_21][K_22] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19][K_20][K_21][K_22] : K_1[K_3][K_19][K_20][K_21][K_22] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19][K_20][K_21][K_22] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19][K_20][K_21][K_22] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3][K_19][K_20][K_21][K_22] extends infer T_18 ? { [K_23 in keyof T_18]: K_1[K_3][K_19][K_20][K_21][K_22][K_23] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19][K_20][K_21][K_22][K_23] : K_1[K_3][K_19][K_20][K_21][K_22][K_23] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19][K_20][K_21][K_22][K_23] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19][K_20][K_21][K_22][K_23] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3][K_19][K_20][K_21][K_22][K_23] extends infer T_19 ? { [K_24 in keyof T_19]: K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24] : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24] extends infer T_20 ? { [K_25 in keyof T_20]: K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25] : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25] extends infer T_21 ? { [K_26 in keyof T_21]: K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25][K_26] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25][K_26] : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25][K_26] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25][K_26] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25][K_26] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>, Readonly<...>> : V[K_2][K_27][K_28] extends Set <...> ? ReadonlySet <...> : Readonly <...>; } : never >; } : never >; }> [] : T[K] extends Map <...> ? ReadonlyMap <...> : T[K] extends Set <...> ? ReadonlySet <...> : Readonly <...>; }]: { [K in keyof T]: T[K] extends string | number | bigint | boolean | symbol | Function ? T[K] : T[K] extends (infer V)[] ? readonly Readonly < { [K_2 in keyof V]: V[K_2] extends string | number | bigint | boolean | symbol | Function ? V[K_2] : V[K_2] extends(infer V)[]? readonly Readonly<any>[]: V[K_2] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<{ [K_3 in keyof K_1]: K_1[K_3] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3] : K_1[K_3] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3] extends infer T_14 ? { [K_19 in keyof T_14]: K_1[K_3][K_19] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19] : K_1[K_3][K_19] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3][K_19] extends infer T_15 ? { [K_20 in keyof T_15]: K_1[K_3][K_19][K_20] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19][K_20] : K_1[K_3][K_19][K_20] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19][K_20] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19][K_20] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3][K_19][K_20] extends infer T_16 ? { [K_21 in keyof T_16]: K_1[K_3][K_19][K_20][K_21] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19][K_20][K_21] : K_1[K_3][K_19][K_20][K_21] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19][K_20][K_21] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19][K_20][K_21] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3][K_19][K_20][K_21] extends infer T_17 ? { [K_22 in keyof T_17]: K_1[K_3][K_19][K_20][K_21][K_22] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19][K_20][K_21][K_22] : K_1[K_3][K_19][K_20][K_21][K_22] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19][K_20][K_21][K_22] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19][K_20][K_21][K_22] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3][K_19][K_20][K_21][K_22] extends infer T_18 ? { [K_23 in keyof T_18]: K_1[K_3][K_19][K_20][K_21][K_22][K_23] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19][K_20][K_21][K_22][K_23] : K_1[K_3][K_19][K_20][K_21][K_22][K_23] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19][K_20][K_21][K_22][K_23] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19][K_20][K_21][K_22][K_23] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3][K_19][K_20][K_21][K_22][K_23] extends infer T_19 ? { [K_24 in keyof T_19]: K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24] : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24] extends infer T_20 ? { [K_25 in keyof T_20]: K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25] : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25] extends infer T_21 ? { [K_26 in keyof T_21]: K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25][K_26] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25][K_26] : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25][K_26] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25][K_26] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25][K_26] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : V[K_2] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly < V[K_2] extends infer T_22? { [K_27 in keyof T_22]: V[K_2][K_27] extends string | number | bigint | boolean | symbol | Function ? V[K_2][K_27] : V[K_2][K_27] extends (infer V)[] ? readonly Readonly < any > [] : V[K_2][K_27] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<{ [K_3 in keyof K_1]: K_1[K_3] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3] : K_1[K_3] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3] extends infer T_14 ? { [K_19 in keyof T_14]: K_1[K_3][K_19] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19] : K_1[K_3][K_19] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3][K_19] extends infer T_15 ? { [K_20 in keyof T_15]: K_1[K_3][K_19][K_20] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19][K_20] : K_1[K_3][K_19][K_20] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19][K_20] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19][K_20] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3][K_19][K_20] extends infer T_16 ? { [K_21 in keyof T_16]: K_1[K_3][K_19][K_20][K_21] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19][K_20][K_21] : K_1[K_3][K_19][K_20][K_21] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19][K_20][K_21] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19][K_20][K_21] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3][K_19][K_20][K_21] extends infer T_17 ? { [K_22 in keyof T_17]: K_1[K_3][K_19][K_20][K_21][K_22] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19][K_20][K_21][K_22] : K_1[K_3][K_19][K_20][K_21][K_22] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19][K_20][K_21][K_22] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19][K_20][K_21][K_22] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3][K_19][K_20][K_21][K_22] extends infer T_18 ? { [K_23 in keyof T_18]: K_1[K_3][K_19][K_20][K_21][K_22][K_23] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19][K_20][K_21][K_22][K_23] : K_1[K_3][K_19][K_20][K_21][K_22][K_23] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19][K_20][K_21][K_22][K_23] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19][K_20][K_21][K_22][K_23] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3][K_19][K_20][K_21][K_22][K_23] extends infer T_19 ? { [K_24 in keyof T_19]: K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24] : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24] extends infer T_20 ? { [K_25 in keyof T_20]: K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25] : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25] extends infer T_21 ? { [K_26 in keyof T_21]: K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25][K_26] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25][K_26] : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25][K_26] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25][K_26] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25][K_26] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : V[K_2][K_27] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly < V[K_2][K_27] extends infer T_23 ? { [K_28 in keyof T_23]: V[K_2][K_27][K_28] extends string | number | bigint | boolean | symbol | Function ? V[K_2][K_27][K_28] : V[K_2][K_27][K_28] extends(infer V)[]? readonly Readonly<any>[]: V[K_2][K_27][K_28] extends Map<infer K_1, infer V_1> ? ReadonlyMap < Readonly<{ [K_3 in keyof K_1]: K_1[K_3] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3] : K_1[K_3] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3] extends infer T_14 ? { [K_19 in keyof T_14]: K_1[K_3][K_19] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19] : K_1[K_3][K_19] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3][K_19] extends infer T_15 ? { [K_20 in keyof T_15]: K_1[K_3][K_19][K_20] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19][K_20] : K_1[K_3][K_19][K_20] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19][K_20] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19][K_20] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3][K_19][K_20] extends infer T_16 ? { [K_21 in keyof T_16]: K_1[K_3][K_19][K_20][K_21] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19][K_20][K_21] : K_1[K_3][K_19][K_20][K_21] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19][K_20][K_21] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19][K_20][K_21] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3][K_19][K_20][K_21] extends infer T_17 ? { [K_22 in keyof T_17]: K_1[K_3][K_19][K_20][K_21][K_22] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19][K_20][K_21][K_22] : K_1[K_3][K_19][K_20][K_21][K_22] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19][K_20][K_21][K_22] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19][K_20][K_21][K_22] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3][K_19][K_20][K_21][K_22] extends infer T_18 ? { [K_23 in keyof T_18]: K_1[K_3][K_19][K_20][K_21][K_22][K_23] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19][K_20][K_21][K_22][K_23] : K_1[K_3][K_19][K_20][K_21][K_22][K_23] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19][K_20][K_21][K_22][K_23] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19][K_20][K_21][K_22][K_23] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3][K_19][K_20][K_21][K_22][K_23] extends infer T_19 ? { [K_24 in keyof T_19]: K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24] : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24] extends infer T_20 ? { [K_25 in keyof T_20]: K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25] : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25] extends infer T_21 ? { [K_26 in keyof T_21]: K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25][K_26] extends string | number | bigint | boolean | symbol | Function ? K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25][K_26] : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25][K_26] extends (infer V)[] ? readonly Readonly<any>[] : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25][K_26] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<{ [K_4 in keyof V_1]: V_1[K_4] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4] : V_1[K_4] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4] extends infer T_7 ? { [K_12 in keyof T_7]: V_1[K_4][K_12] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12] : V_1[K_4][K_12] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12] extends infer T_8 ? { [K_13 in keyof T_8]: V_1[K_4][K_12][K_13] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13] : V_1[K_4][K_12][K_13] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13] extends infer T_9 ? { [K_14 in keyof T_9]: V_1[K_4][K_12][K_13][K_14] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14] : V_1[K_4][K_12][K_13][K_14] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14] extends infer T_10 ? { [K_15 in keyof T_10]: V_1[K_4][K_12][K_13][K_14][K_15] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15] : V_1[K_4][K_12][K_13][K_14][K_15] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15] extends infer T_11 ? { [K_16 in keyof T_11]: V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16] extends infer T_12 ? { [K_17 in keyof T_12]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17] extends infer T_13 ? { [K_18 in keyof T_13]: V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends string | number | bigint | boolean | symbol | Function ? V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends (infer V)[] ? readonly Readonly<any>[] : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_1[K_4][K_12][K_13][K_14][K_15][K_16][K_17][K_18] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : K_1[K_3][K_19][K_20][K_21][K_22][K_23][K_24][K_25][K_26] extends Set<infer V_2> ? ReadonlySet<Readonly<{ [K_5 in keyof V_2]: V_2[K_5] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5] : V_2[K_5] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5] extends infer T_1 ? { [K_6 in keyof T_1]: V_2[K_5][K_6] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6] : V_2[K_5][K_6] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6] extends infer T_2 ? { [K_7 in keyof T_2]: V_2[K_5][K_6][K_7] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7] : V_2[K_5][K_6][K_7] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7] extends infer T_3 ? { [K_8 in keyof T_3]: V_2[K_5][K_6][K_7][K_8] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8] : V_2[K_5][K_6][K_7][K_8] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8] extends infer T_4 ? { [K_9 in keyof T_4]: V_2[K_5][K_6][K_7][K_8][K_9] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9] : V_2[K_5][K_6][K_7][K_8][K_9] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9] extends infer T_5 ? { [K_10 in keyof T_5]: V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<V_2[K_5][K_6][K_7][K_8][K_9][K_10] extends infer T_6 ? { [K_11 in keyof T_6]: V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends string | number | bigint | boolean | symbol | Function ? V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends (infer V)[] ? readonly Readonly<any>[] : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Map<infer K_1, infer V_1> ? ReadonlyMap<Readonly<any>, Readonly<any>> : V_2[K_5][K_6][K_7][K_8][K_9][K_10][K_11] extends Set<infer V_2> ? ReadonlySet<Readonly<any>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>> : Readonly<any>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; } : never>; }>, Readonly<...>> : V[K_2][K_27][K_28] extends Set <...> ? ReadonlySet <...> : Readonly<...>; } : never >; } : never >; }> [] : T[K] extends Map <...> ? ReadonlyMap <...> : T[K] extends Set <...> ? ReadonlySet <...> : Readonly <...>; }[P]; };
/**
 * A class constructor.
 * Used for functions with generic class constructor parameters.
 */
export type Constructor = new (...args: any[]) => any;
/**
 * A single point, expressed as an object {x, y}
 */
export type Point = PIXI.Point | {
  x: number;
  y: number;
};
/**
 * A single point, expressed as an array [x,y]
 */
export type PointArray = number[];
/**
 * A standard rectangle interface.
 */
export type Rectangle = {
  x: number;
  y: number;
  width: number;
  height: number;
};
export type BuiltinTypes = typeof Number | typeof String | typeof Boolean;
export type ColorSource = number | [red: number, green: number, blue: number] | string | Color;
/**
 * A Client Setting
 */
export type SettingConfig = {
  /**
   * A unique machine-readable id for the setting
   */
  key: string;
  /**
   * The namespace the setting belongs to
   */
  namespace: string;
  /**
   * The human-readable name
   */
  name: string;
  /**
   * An additional human-readable hint
   */
  hint: string;
  /**
   * The scope the Setting is stored in, either World or Client
   */
  scope: string;
  /**
   * Indicates if this Setting should render in the Config application
   */
  config: boolean;
  /**
   * The type of data stored by this Setting
   */
  type: BuiltinTypes | DataField | DataModel;
  /**
   * For string Types, defines the allowable values
   */
  choices?: any;
  /**
   * For numeric Types, defines the allowable range
   */
  range?: any;
  /**
   * The default value
   */
  default?: any;
  /**
   * Executes when the value of this Setting changes
   */
  onChange?: Function;
  /**
   * A custom form field input used in conjunction with a DataField type
   */
  input?: CustomFormInput;
};
/**
 * A Client Setting Submenu
 */
export type SettingSubmenuConfig = {
  /**
   * The human readable name
   */
  name: string;
  /**
   * The human readable label
   */
  label: string;
  /**
   * An additional human readable hint
   */
  hint: string;
  /**
   * The classname of an Icon to render
   */
  icon: string;
  /**
   * The FormApplication class to render TODO better typing
   */
  type: any;
  /**
   * If true, only a GM can edit this Setting
   */
  restricted: boolean;
};
/**
 * A Client Keybinding Action Configuration
 */
export type KeybindingActionConfig = {
  /**
   * The namespace within which the action was registered
   */
  namespace?: string;
  /**
   * The human-readable name
   */
  name: string;
  /**
   * An additional human-readable hint
   */
  hint?: string;
  /**
   * The default bindings that can never be changed nor removed.
   */
  uneditable?: KeybindingActionBinding[];
  /**
   * The default bindings that can be changed by the user.
   */
  editable?: KeybindingActionBinding[];
  /**
   * A function to execute when a key down event occurs. If True is returned, the event is consumed and no further keybinds execute.
   */
  onDown?: Function;
  /**
   * A function to execute when a key up event occurs. If True is returned, the event is consumed and no further keybinds execute.
   */
  onUp?: Function;
  /**
   * If True, allows Repeat events to execute the Action's onDown. Defaults to false.
   */
  repeat?: boolean;
  /**
   * If true, only a GM can edit and execute this Action
   */
  restricted?: boolean;
  /**
   * Modifiers such as [ "CONTROL" ] that can be also pressed when executing this Action. Prevents using one of these modifiers as a Binding.
   */
  reservedModifiers?: string[];
  /**
   * The preferred precedence of running this Keybinding Action
   */
  precedence?: number;
  /**
   * The recorded registration order of the action
   */
  order?: number;
};
/**
 * A Client Keybinding Action Binding
 */
export type KeybindingActionBinding = {
  /**
   * A numeric index which tracks this bindings position during form rendering
   */
  index?: number;
  /**
   * The KeyboardEvent#code value from https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values
   */
  key: string;
  /**
   * An array of modifiers keys from KeyboardManager.MODIFIER_KEYS which are required for this binding to be activated
   */
  modifiers?: string[];
};
/**
 * An action that can occur when a key is pressed
 */
export type KeybindingAction = {
  /**
   * The namespaced machine identifier of the Action
   */
  action: string;
  /**
   * The Keyboard key
   */
  key: string;
  /**
   * The human-readable name
   */
  name: string;
  /**
   * Required modifiers
   */
  requiredModifiers: string[];
  /**
   * Optional (reserved) modifiers
   */
  optionalModifiers: string[];
  /**
   * The handler that executes onDown
   */
  onDown: Function;
  /**
   * The handler that executes onUp
   */
  onUp: Function;
  /**
   * If True, allows Repeat events to execute this Action's onDown
   */
  repeat: boolean;
  /**
   * If true, only a GM can execute this Action
   */
  restricted: boolean;
  /**
   * The registration precedence
   */
  precedence: number;
  /**
   * The registration order
   */
  order: number;
};
/**
 * Keyboard event context
 */
export type KeyboardEventContext = {
  /**
   * The normalized string key, such as "A"
   */
  key: string;
  /**
   * The originating keypress event
   */
  event: KeyboardEvent;
  /**
   * Is the Shift modifier being pressed
   */
  isShift: boolean;
  /**
   * Is the Control or Meta modifier being processed
   */
  isControl: boolean;
  /**
   * Is the Alt modifier being pressed
   */
  isAlt: boolean;
  /**
   * Are any of the modifiers being pressed
   */
  hasModifier: boolean;
  /**
   * A list of string modifiers applied to this context, such as [ "CONTROL" ]
   */
  modifiers: string[];
  /**
   * True if the Key is Up, else False if down
   */
  up: boolean;
  /**
   * True if the given key is being held down such that it is automatically repeating.
   */
  repeat: boolean;
  /**
   * The executing Keybinding Action. May be undefined until the action is known.
   */
  action?: string;
};
/**
 * Connected Gamepad info
 */
export type ConnectedGamepad = {
  /**
   * A map of axes values
   */
  axes: Map<string, number>;
  /**
   * The Set of pressed Buttons
   */
  activeButtons: Set<string>;
};
export type RequestData = object | object[] | string | string[];
export type SocketRequest = {
  options?: object;
  broadcast?: boolean;
};
export type SocketResponse = {
  /**
   * The initial request
   */
  request: SocketRequest;
  /**
   * An error, if one occurred
   */
  error?: Error;
  /**
   * The status of the request
   */
  status?: string;
  /**
   * The ID of the requesting User
   */
  userId?: string;
  /**
   * Data returned as a result of the request
   */
  data?: RequestData;
};
